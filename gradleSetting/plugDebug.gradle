def appPkgName = "cn.likeit.LikeShop"
def repo = "/data/data/$appPkgName/files/repo"

def getAdbExe() {
    def localProperties = new File(rootDir, "local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream {
            instr -> properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        return "$sdkDir/platform-tools/adb"
    }
    return 'adb'
}

def getAdbDevices() {
    def devices = []

    def adb = getAdbExe()
    def ret = ['sh', '-c', "$adb devices"].execute().text.trim().split("\n")
    def i = 1, s = ret.size()
    for (; i < s; ++i) {
        def line = ret[i];
        def p = line.indexOf("\t")
        if (p != -1) {
            devices << line.substring(0, p)
        }
    }
    return devices
}

task uploadSite {
    doLast {
        def sitePath = "$rootDir/site.txt"
        def adb = getAdbExe()
        def devices = getAdbDevices()
        println '=============================='
        for (String d : devices) {
            println "push site.txt to " + d
            exec {
                commandLine "$adb", "-s", d, 'push', sitePath, "$repo/site.txt"
            }
            println '=============================='
        }
    }
}

subprojects {
    def adb = getAdbExe()
    def devices = getAdbDevices()
    task uploadDebugPlug {
        task ->
            doLast {
                def m = "$task.project.name"

                def dir = null
                def moduleFile = task.project.file('module.properties')
                if (moduleFile.canRead()) {
                    def Properties props = new Properties();
                    props.load(new FileInputStream(moduleFile))
                    dir = props['MODULE_ID']
                }
                if (dir == null) {
                    return
                }

                def filename = "$m-debug.apk"
                def path = "${project.rootDir}/../$m/build/outputs/apk/$filename"
                def apk = new File("$path")
                if (!apk.exists()) {
                    return
                }

                println '=============================='
                for (String d : devices) {
                    println "mkdir $repo/$dir on $d"
                    exec {
                        commandLine "$adb", "-s", d, 'shell', 'mkdir', "$repo/$dir"
                    }
                    println "push $filename to $d"
                    exec {
                        commandLine "$adb", "-s", d, 'push', "$path", "$repo/$dir/1.apk"
                    }
                    println '=============================='
                }
            }
    }
}